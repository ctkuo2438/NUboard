spring:
  application:
    name: NUboard-services

  # PostgreSQL Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/nuboard}
    username: ${DATABASE_USERNAME:postgres}
    driver-class-name: org.postgresql.Driver

  # Database Initialization
  sql:
    init:
      mode: always # initialization-mode
      platform: postgres # PostgreSQL

  # JPA/Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}  # create/update/validate
    show-sql: ${SHOW_SQL:true} # sql log
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            issuer-uri: https://accounts.google.com

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    session:
      timeout: 30m
      cookie:
        http-only: true
        secure: false  # Important: must be false for localhost HTTP
        same-site: lax
        name: JSESSIONID
        path: /

# Custom Configuration, snowflakeID
id:
  generator:
    workerId: ${WORKER_ID:1}
    datacenterId: ${DATA_CENTER_ID:0}

# Logging Configuration
logging:
  level:
    root: INFO
    # Database/SQL logging
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

    # application logging
    com.neu.nuboard: DEBUG
    com.neu.nuboard.security: TRACE

    # Spring Security OAuth2 logging
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: TRACE
    org.springframework.security.web: TRACE

    # Session debugging
    org.springframework.session: TRACE
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: TRACE

  # File logging
  file:
    name: logs/application.log

  # log patterns
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

  # Log file rotation
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 10
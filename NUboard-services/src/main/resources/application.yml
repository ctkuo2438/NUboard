spring:

  thymeleaf:
    check-template-location: false
    
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/nuboard}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:}

    driver-class-name: org.postgresql.Driver

  sql:
    init:
      mode: always     # ✅ 替代旧版 initialization-mode
      platform: postgres # ✅ 确保识别 PostgreSQL（可选）

  jpa:
    hibernate:
      ddl-auto: update # auto update db
    show-sql: true # sql log
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

server:
  port: 8080

# 分布式ID生成器配置
id:
  generator:
    workerId: 1
    datacenterId: 0           
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE